version: '3.9'

services:

  # migrate
  migrate:
    image: migrate/migrate
    networks:
      - mynetwork
    volumes:
      - ./tender-service/internal/migrations:/migrations
    command: [ "-path", "/migrations", "-database",  
                "postgres://postgres:1234@postgres-tender:5432/tender?sslmode=disable", 
                "up" ]
    depends_on:
      - postgres-db

  migrate-1:
    image: migrate/migrate
    networks:
      - mynetwork
    volumes:
      - .//auth-service/migrations:/migrations
    command: [ "-path", "/migrations", "-database",  
                "postgres://postgres:1234@postgres-tender:5432/tender?sslmode=disable", 
                "up" ]
    depends_on:
      - postgres-db

  # postgres
  postgres-db:
    container_name: postgres-tender
    image: postgres:latest
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
      POSTGRES_DB: tender
    volumes:
      - db:/post-database/post-memory
    ports:
      - "5439:5432"
    networks:
      - mynetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway/
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    networks:
      - mynetwork

  # auth
  auth-service:
    container_name: auth-service
    build: ./auth-service/
    ports:
      - "8888:8888"
      - "3030-3030"
    depends_on:
      - postgres-db
    networks:
      - mynetwork

  # tender-service
  tender-service:
    container_name: tender-service
    build: ./tender-service/
    ports:
      - "50050-50050"
    depends_on:
      - postgres-db
    networks:
      - mynetwork

  # redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mynetwork

  # minio
  minio:
    image: docker.io/bitnami/minio:2024
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=Dior
      - MINIO_ROOT_PASSWORD=isakov05@
      - MINIO_DEFAULT_BUCKETS=photos
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mynetwork
  

# Docker Networks
networks:
  mynetwork:
    external: true
    name: tender-network
    driver: bridge

# Docker Volumes
volumes:
  db:
  redis-data:
    driver: local
  minio_data:
    driver: local