basePath: /
definitions:
  genprotos.AllUsers:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/genprotos.User'
        type: array
    type: object
  genprotos.User:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  genprotos.UserLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: created by salikhov
  title: auth service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Create
        in: body
        name: Create
        required: true
        schema:
          $ref: '#/definitions/genprotos.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Login Successful
          schema:
            type: string
        "400":
          description: Error while logging in
          schema:
            type: string
      summary: Login User
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Create
        in: body
        name: Create
        required: true
        schema:
          $ref: '#/definitions/genprotos.User'
      produces:
      - application/json
      responses:
        "201":
          description: Create Successful
          schema:
            type: string
        "400":
          description: Error while creating user
          schema:
            type: string
      summary: Register User
      tags:
      - Auth
  /user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete Successful
          schema:
            type: string
        "400":
          description: Error while deleting user
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete User
      tags:
      - Admin Managment
  /user/delete_profil:
    delete:
      consumes:
      - application/json
      description: Delete an existing Profil
      produces:
      - application/json
      responses:
        "200":
          description: Delete Successful
          schema:
            type: string
        "400":
          description: Error while deleting user
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Profil
      tags:
      - User Managment
  /user/get_profil:
    get:
      consumes:
      - application/json
      description: Get a user Profil
      produces:
      - application/json
      responses:
        "200":
          description: Get Profil Successful
          schema:
            $ref: '#/definitions/genprotos.User'
        "400":
          description: Error while retrieving user
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get User Profil
      tags:
      - User Managment
  /user/getall:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      - in: query
        name: role
        type: string
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get All Successful
          schema:
            $ref: '#/definitions/genprotos.AllUsers'
        "400":
          description: Error while retrieving users
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get All Users
      tags:
      - Admin Managment
  /user/getbyid/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get By ID Successful
          schema:
            $ref: '#/definitions/genprotos.User'
        "400":
          description: Error while retrieving user
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get User By ID
      tags:
      - Admin Managment
  /user/refresh-token:
    get:
      consumes:
      - application/json
      description: refresh an existing Token
      produces:
      - application/json
      responses:
        "200":
          description: refresh Successful
          schema:
            type: string
        "400":
          description: Error while refreshed token
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: refresh Toekn
      tags:
      - User Managment
  /user/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update
        in: body
        name: Update
        required: true
        schema:
          $ref: '#/definitions/genprotos.User'
      produces:
      - application/json
      responses:
        "200":
          description: Update Successful
          schema:
            type: string
        "400":
          description: Error while updating user
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update User
      tags:
      - Admin Managment
  /user/update_profil:
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: Update
        in: body
        name: Update
        required: true
        schema:
          $ref: '#/definitions/genprotos.User'
      produces:
      - application/json
      responses:
        "200":
          description: Update Successful
          schema:
            type: string
        "400":
          description: Error while updating user
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Profil
      tags:
      - User Managment
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
